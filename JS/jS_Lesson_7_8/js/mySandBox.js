

'use strict';

// // Учимся рулить
// // Мы уже успели познакомиться с методом «.click()», в действительности этот
// // метод представляет из себя обёртку для вызова «.on()» и «.trigger()»:
//
// if (arguments.length > 0) {
//     this.on("click", null, data, fn ) :
// } else {
//     this.trigger("click");
// }
//
// // Ой, код я чуть-чуть изменил — для читаемости, если же любопытство
// // восторжествует, то ищите в исходном коде по строке «dblclick»
// //
// // Ну так давайте же попробуем без этих обёрток:
//
// // вешаем обработчик
//     $('.class').on('click', function(){
// // что-то делаем
//     });
// // вызываем обработчик
// $('.class').trigger('click');
// // отключаем обработчик
// $('.class').off('click');
//
// Можно повесить обработчик событий практически на любой объект:

// проще некуда
    var obj = {
        test:function() {
            console.log('obj.test');
        }
    }

// создаём обработчик произвольного события someEvent
$(obj).on('someEvent', function(){
    console.log('obj.someEvent');
    this.test();
});

// инициируем событие someEvent $(obj).trigger('someEvent');

// полюбопытствуем
console.log(obj);