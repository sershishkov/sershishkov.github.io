{"version":3,"sources":["script_1.js"],"names":["$","testOne","data","title","questions","answers","name","flag","testMulti","serialOne","JSON","stringify","serialMul","localStorage","setItem","returnOne","parse","getItem","returnMul","contentOne","_","template","html","ldata","append","buttExamOne","find","wrapModal","document","getElementById","h1Modal","on","inputExamed","totalTrue","checkedTrue","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","answerTrue","getAttribute","is","err","return","innerText","setAttribute","contentMul","Mdata","inputExamedM","totalTrueM","checkedFalseM","checkedTrueM","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","itemM","answerTrueM","addEventListener","tempRadio","getElementsByClassName","tempChek","forEach","checked","item2"],"mappings":"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","file":"main.min.js","sourcesContent":["'use strict';\n\n$(function () {\n    //объект для единственного  выбора ответа\n    var testOne = {\n        data: {\n            title: 'Тест по программированию',\n            questions: [{\n                title: 'Семь умножить на восемь',\n                answers: [{ name: 'Вариант ответа 33 ', flag: false }, { name: 'Вариант ответа 44 ', flag: false }, { name: 'Вариант ответа 56 ', flag: true }, { name: 'Вариант ответа 99 ', flag: false }, { name: 'Вариант ответа 54 ', flag: false }]\n            }, {\n                title: 'Шесть умножить на восемь',\n                answers: [{ name: 'Вариант ответа 33 ', flag: false }, { name: 'Вариант ответа 37 ', flag: false }, { name: 'Вариант ответа 40 ', flag: false }, { name: 'Вариант ответа 44 ', flag: false }, { name: 'Вариант ответа 48 ', flag: true }]\n            }, {\n                title: 'Сто поделить на 20',\n                answers: [{ name: 'Вариант ответа 2 ', flag: false }, { name: 'Вариант ответа 3 ', flag: false }, { name: 'Вариант ответа 5 ', flag: true }, { name: 'Вариант ответа 7 ', flag: false }, { name: 'Вариант ответа 9 ', flag: false }]\n\n            }, {\n                title: 'Двенадцать в квадрате',\n                answers: [{ name: 'Вариант ответа 101 ', flag: false }, { name: 'Вариант ответа 115 ', flag: false }, { name: 'Вариант ответа 144 ', flag: true }, { name: 'Вариант ответа 151 ', flag: false }, { name: 'Вариант ответа 308 ', flag: false }]\n\n            }]\n        }\n    };\n    //объект для множественного выбора ответа\n    var testMulti = {\n        data: {\n            title: 'Тест по географии',\n            questions: [{\n                title: 'Флаг Украины состоит из ...цветов',\n                answers: [{ name: ' 5 ', flag: false }, { name: ' 4 ', flag: false }, { name: ' 2 ', flag: true }, { name: ' 8 ', flag: false }, { name: ' 9 ', flag: false }]\n            }, {\n                title: 'Какого цвета флаг Украины',\n                answers: [{ name: ' Зеленый ', flag: false }, { name: ' Голубой ', flag: true }, { name: ' Красный', flag: false }, { name: ' Белый ', flag: false }, { name: ' Желтый ', flag: true }]\n            }, {\n                title: 'Где находится Украина',\n                answers: [{ name: ' в Европе', flag: true }, { name: ' в Америке ', flag: false }, { name: ' в Евразии ', flag: true }, { name: ' в Африке ', flag: false }, { name: 'Рядом с Польшей ', flag: true }]\n\n            }, {\n                title: 'Столица Украины',\n                answers: [{ name: ' Жмеренка ', flag: false }, { name: ' Киев', flag: true }, { name: ' Харьков ', flag: false }, { name: ' Чернигов', flag: false }, { name: ' Бердичев ', flag: false }]\n\n            }]\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    //сериализуем обьекты\n    var serialOne = JSON.stringify(testOne);\n    var serialMul = JSON.stringify(testMulti);\n    //запишем его в хранилище по ключам \"myKeyOne\" и \"myKeyMul\"\n    localStorage.setItem(\"myKeyOne\", serialOne);\n    localStorage.setItem(\"myKeyMul\", serialMul);\n    //спарсим их обратно в объекты\n    var returnOne = JSON.parse(localStorage.getItem(\"myKeyOne\"));\n    var returnMul = JSON.parse(localStorage.getItem(\"myKeyMul\"));\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\n    //Шаблонизация радио\n    var compilOne = _.template($('#testO').html());\n    var contentOne = compilOne({ 'ldata': returnOne });\n    $('.wrapOne').append(contentOne);\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    //Обработка кнопки радио\n    var buttExamOne = $('.container').find('#myButtOne');\n    var wrapModal = document.getElementById('wrapModal');\n    var h1Modal = document.getElementById('rightAns');\n\n    buttExamOne.on('click', function () {\n        var inputExamed = $('.container').find('.inputRadio');\n        var totalTrue = 0;\n        var checkedTrue = 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = inputExamed[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var item = _step.value;\n\n                var answerTrue = item.getAttribute('value');\n\n                if (answerTrue === 'true') {\n                    totalTrue++;\n                }\n                if ($(item).is(':checked') && answerTrue === 'true') {\n                    checkedTrue++;\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        h1Modal.innerText = 'Вы выбрали: ' + checkedTrue + ' из ' + totalTrue + ' правилных ответов';\n        wrapModal.setAttribute('class', 'wrapModalShow');\n    });\n    ////////////////////////////////////////////////////////////////////////////////\n    //Шаблонизация чекбоксов\n    var compilMul = _.template($('#testMulti').html());\n    var contentMul = compilMul({ 'Mdata': returnMul });\n    $('.wrapMulti').append(contentMul);\n    /////////////////////////////////////////////////////////////////////////////\n    //обработка кнопки чекбокса\n    var buttExamMul = $('.container').find('#myButtMulti');\n    buttExamMul.on('click', function () {\n        var inputExamedM = $('.container').find('.inputCheck');\n        var totalTrueM = 0;\n        var checkedFalseM = 0;\n        var checkedTrueM = 0;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = inputExamedM[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var itemM = _step2.value;\n\n                var answerTrueM = itemM.getAttribute('value');\n                if (answerTrueM === 'true') {\n                    totalTrueM++;\n                }\n                if ($(itemM).is(':checked') && answerTrueM === 'true') {\n                    checkedTrueM++;\n                }\n                if ($(itemM).is(':checked') && answerTrueM === 'false') {\n                    checkedFalseM++;\n                }\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        h1Modal.innerText = 'Вы выбрали: ' + checkedTrueM + ' из ' + totalTrueM + ' правилных ответов ' + ' ,неправилных ответов: ' + checkedFalseM;\n        wrapModal.setAttribute('class', 'wrapModalShow');\n    });\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //Обработка кнопки модального окна\n    var butModal = document.getElementById('butModal');\n    butModal.addEventListener('click', function () {\n        wrapModal.setAttribute('class', 'wrapModalHide');\n        //находим все чекбоксы\n        var tempRadio = document.getElementsByClassName('inputRadio');\n        var tempChek = document.getElementsByClassName('inputCheck');\n        //обнуляем все чекбоксы\n        _.forEach(tempRadio, function (item) {\n            item.checked = false;\n        });\n        _.forEach(tempChek, function (item2) {\n            item2.checked = false;\n        });\n    });\n});"]}